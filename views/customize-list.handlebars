<h2 style="text-align: center;">Customize your {{festival.display_name}} {{festivalYear}} lineup</h2>

                {{#if lastUpdatedDate}}
                    <p style="margin: 0;">Lineup last updated: {{formatDate lastUpdatedDate}}</p>
                    <p style="font-size: smaller; margin: 0; padding: 2px;">Festival released day lineups or changed the list of artists playing? <a style="font-size: smaller;" href="mailto:lineuplist@brianteam.dev?subject=Update {{festival.display_name}} {{festivalYear}} lineup">Request an update</a></p>
                {{/if}}

<form class="pure-form" id="listOptionsForm" action="/generate-lineup-list" method="POST" style="display: flex; flex-direction: column;">
    <div class="pure-g" style="justify-content: center;">
        <div id="formContent" class="pure-g pure-u-11-12 pure-u-lg-7-12 pure-u-md-3-4" style="display: flex; flex-direction: row; justify-content: space-between;">
            <div id="filters" class="pure-u-11-24 pure-u-lg-2-5 pure-u-md-5-12">
                <div style="display: flex; flex-direction: column;">
                    <h3 style="margin-bottom: 0;">Playlist Options</h3>
                    <p style="font-size: smaller; margin-top: 0;">These settings affect the makeup of your generated playlist</p>

                    <div style="margin-bottom: 1rem; display: flex; flex-direction: column;">
                        <u>Tracks per artist</u>
                        <p style="margin-top: 0; font-size: smaller;">Number of tracks for each artist on the playlist (max 10)</p>
                        <input type="number" name="tracksPerArtist" value="{{tracksPerArtist}}" style="flex: 0; max-width: 30%;" min="1" max="10" required>
                    </div>

                    <div style="margin-bottom: 1rem; display: flex; flex-direction: column;">
                        <u>Track type</u>
                        <p style="margin-top: 0; font-size: smaller;">How the tracks are selected for each artist. "Top tracks" are the most popular, "Recent setlists" are tracks from the artist's most recent performances, and "Newest tracks" pulls from their most recently released music.</p>
                        <label for="top" class="pure-checkbox">
                            <input type="radio" name="trackType" id="top" value="top" {{topTracksCheckedStr}}>
                            Top tracks</label>
                        <div style="display: flex; flex-direction: row; align-items: center;">
                            <label for="setlist" class="pure-checkbox">
                                <input type="radio" name="trackType" id="setlist" value="setlist" {{setlistTracksCheckedStr}}>
                                Recent setlists</label>
                                <label style="font-size: smaller; color: mediumaquamarine; margin: 0 0 0 0.5em;">Beta!<label>
                        </div>
                        <label for="recent" class="pure-checkbox">
                            <input type="radio" name="trackType" id="recent" value="recent" {{newTracksCheckedStr}}>
                            Newest tracks</label>
                    </div>
                </div>

                <h3 style="margin-bottom: 0;">Filters</h3>
                <p style="font-size: smaller; margin-top: 0;">Adjusting these filters affects the artists on the right. The brighter the artist, the better of a match they are. </p>

                <div style="display: flex; flex-direction: column; margin-top: 1rem;">
                    <div style="margin-bottom: 1rem;">
                        <u>Festival Day</u>
                        {{#if (gt days.length 1)}}
                            {{#each days}}
                            <div>
                                <label for="{{this.obj.number}}" class="pure-checkbox">
                                <input class="dayCheckbox" id="{{this.obj.number}}" type="checkbox" value="{{this.obj.number}}" onchange="refreshArtistList()" {{state}}>
                                {{#if this.obj.date}}
                                    {{this.obj.date}}
                                {{else}}
                                    {{this.obj.number}}
                                {{/if}}
                                </label>
                            </div>
                            {{/each}}
                        {{else}}
                            <p style="font-size: smaller; margin-top: 0;">Single day lineups not released for this festival yet.</p>
                        {{/if}}
                    </div>

                    <div style="margin-bottom: 1rem;">
                        <u>Main Genres</u>
                        <p style="font-size: smaller; margin-top: 0;">Common genres shared between many artists. Filtering by these will cause the largest impact</p>
                        <label for="uncheckAllMainGenres" class="pure-checkbox" style="margin-bottom: 1em">
                            <input type="checkbox" id="uncheckAllMainGenres" onchange="uncheckAllMainGenresChanged()" checked>
                            Check/Uncheck all main genres</label>
                        {{#each mainGenres}}
                            <label for="{{this.obj}}" class="pure-checkbox">
                                <input class="mainGenreCheckbox" id="{{this.obj}}" type="checkbox" value="{{this.obj}}" onchange="refreshArtistList()" {{this.state}}>
                                {{this.obj}}</label>
                        {{/each}}
                    </div>

                    <div style="margin-top: 1rem;">
                        <u>Misc. Genres</u>
                        <p style="font-size: smaller; margin-top: 0;">Uncommon genres not easily grouped into a main genre. These might be specific to certain artists and can be used to fine-tune the results.</p>
                        <label for="uncheckAllSpecificGenres" class="pure-checkbox" style="margin-bottom: 1em">
                            <input type="checkbox" id="uncheckAllSpecificGenres" onchange="uncheckAllSpecificGenresChanged()" checked>
                            Check/Uncheck all misc. genres</label>
                        {{#each specificGenres}}
                        <label for="{{this.obj}}" class="pure-checkbox">
                            <input class="specificGenreCheckbox" id="{{this.obj}}" type="checkbox" value="{{this.obj}}" onchange="refreshArtistList()"  {{this.state}}>
                            {{this.obj}}</label>
                        {{/each}}
                    </div>
                </div>
            </div>

            <div id="includedArtists" class="pure-u-11-24 pure-u-lg-2-5 pure-u-md-5-12">
                <h3 style="margin-bottom: 0;">Artists</h3>
                <p style="font-size: smaller; margin-top: 0;">All checked artists will be included in the final lineup. Uncheck any remaining artists to exclude them from the final lineup.</p>
                <label for="uncheckAllArtists" class="pure-checkbox" style="margin-bottom: 1em">
                    <input type="checkbox" id="uncheckAllArtists" onchange="uncheckAllArtistsChanged()" checked>
                    Check/Uncheck all artists</label>
                {{#each artists}}
                    <label for="{{this.id}}-day-{{this.day}}-checkbox" id="{{this.id}}-day-{{this.day}}-label" class="pure-checkbox">
                    <input class="artistCheckbox" id="{{this.id}}-day-{{this.day}}-checkbox" type="checkbox" value="{{this.id}}" data-genres="{{stringify this.combined_genres}}" data-day="{{this.day}}" {{checkedStr}}>
                    {{this.name}}</label>
                {{/each}}
            </div>

        </div>
    </div>
    <input type="hidden" id="artistIds" name="artistIds">
    <input type="hidden" name="festivalName" value="{{festival.name}}">
    <input type="hidden" name="festivalDisplayName" value="{{festival.display_name}}">
    <input type="hidden" name="festivalYear" value="{{festivalYear}}">
    <input type="hidden" id="selectedGenres" name="selectedGenres">
    <input type="hidden" id="selectedDays" name="selectedDays">
    <input class="pure-button pure-button-primary" style="margin: 1rem; align-self: center;" type="submit" value="Generate">
</form>

<script>
document.addEventListener("DOMContentLoaded", function(event) {
    refreshArtistList();
});
</script>
<script>
var form = document.getElementById("listOptionsForm");
form.addEventListener("submit", function() {
    var artists = document.getElementsByClassName("artistCheckbox");
    var mainGenres = document.getElementsByClassName("mainGenreCheckbox");
    var specificGenres = document.getElementsByClassName("specificGenreCheckbox");
    var days = document.getElementsByClassName("dayCheckbox");

    var artistIds = [];
    for (var i = 0; i < artists.length; i++) {
        if (artists[i].checked && artists[i].style.display !== "none") {
            artistIds.push(artists[i].value);
        }
    }

    var allGenres = [];
    allGenres = Array.prototype.concat.apply(allGenres, mainGenres);
    allGenres = Array.prototype.concat.apply(allGenres, specificGenres);
    var selectedGenres = [];
    for (var i = 0; i < allGenres.length; i++) {
        if (allGenres[i].checked) {
            selectedGenres.push(allGenres[i].value);
        }
    }

    var selectedDays = [];
    for (var i = 0; i < days.length; i++) {
        if (days[i].checked) {
            selectedDays.push(days[i].value);
        }
    }

    var artistIdsInput = document.getElementById("artistIds");
    if (artistIds.length === 0) {
        // Don't send the empty query param
        artistIdsInput.name = '';
    } else {
        // Reset the name in case we came back and unchecked an artist(s)
        artistIdsInput.name = 'artistIds';
        artistIdsInput.value = artistIds.join(',');
    }

    var selectedGenresInput = document.getElementById("selectedGenres");
    if (selectedGenres.length === 0) {
        selectedGenresInput.name = '';
    } else {
        selectedGenresInput.name = "selectedGenres";
        selectedGenresInput.value = selectedGenres.join(",");
    }

    var selectedDaysInput = document.getElementById("selectedDays");
    if (selectedDays.length === 0) {
        selectedDaysInput.name = '';
    } else {
        selectedDaysInput.name = "selectedDays";
        selectedDaysInput.value = selectedDays.join(",");
    }
});
</script>
<script>
function refreshArtistList() {
    var artists = document.getElementsByClassName("artistCheckbox");
    var mainGenres = document.getElementsByClassName("mainGenreCheckbox");
    var specificGenres = document.getElementsByClassName("specificGenreCheckbox");
    var days = document.getElementsByClassName("dayCheckbox");
    var allGenres = [];
    allGenres = Array.prototype.concat.apply(allGenres, mainGenres);
    allGenres = Array.prototype.concat.apply(allGenres, specificGenres);

    var selectedGenres = Array.prototype.slice.call(allGenres)
    .filter(x => x.checked)
    .map(x => x.value);

    var selectedDays = Array.prototype.slice.call(days)
        .filter(x => x.checked)
        .map(x => x.value);

    for (var i = 0; i < artists.length; i++) {
        var artistGenres = JSON.parse(artists[i].getAttribute("data-genres"));
        var artistDay = artists[i].getAttribute("data-day");

        // make sure we hide or show the whole div containing checkbox and name
        var artistLabel = document.getElementById(artists[i].value + "-day-" + artistDay + "-label");
        var artistCheckbox = document.getElementById(artists[i].value + "-day-" + artistDay + "-checkbox");
        var opacity = getArtistOpacity(selectedGenres, artistGenres);
        artistLabel.style.opacity = opacity;
        artistCheckbox.style.opacity = opacity;

        var noDayMatch = days.length > 0 && (selectedDays.length == 0 || !selectedDays.includes(artistDay));
        var noGenreMatch = artistGenres.length > 0 && !artistGenres.some(x => selectedGenres.includes(x));
        if (noGenreMatch || noDayMatch) {
            artistLabel.style.display = "none";
            artistCheckbox.style.display = "none";
        } else {
            // Let class style take back over
            artistLabel.style.display = "";
            artistCheckbox.style.display = "";
        }
    }
}

function getArtistOpacity(selectedGenres, artistGenres) {
    var artistGenresCount = artistGenres.length;
    if (artistGenresCount == 0) {
        return 1.0;
    }

    var selectedArtistGenresCount = artistGenres.reduce((total, currentGenre) => {
        if (selectedGenres.includes(currentGenre)) {
            total++;
        }
        return total;
    }, 0);

    return selectedArtistGenresCount / artistGenresCount;
}

function uncheckAllSpecificGenresChanged() {
    var checkbox = document.getElementById("uncheckAllSpecificGenres");
    var specificGenres = document.getElementsByClassName("specificGenreCheckbox");
    var isChecked = checkbox.checked;
    for (var i = 0; i < specificGenres.length; i++) {
        specificGenres[i].checked = isChecked;
    }

    refreshArtistList();
}

function uncheckAllMainGenresChanged() {
    var checkbox = document.getElementById("uncheckAllMainGenres");
    var mainGenres = document.getElementsByClassName("mainGenreCheckbox");
    var isChecked = checkbox.checked;
    for (var i = 0; i < mainGenres.length; i++) {
        mainGenres[i].checked = isChecked;
    }

    refreshArtistList();
}

function uncheckAllArtistsChanged() {
    var checkbox = document.getElementById("uncheckAllArtists");
    var artists = document.getElementsByClassName("artistCheckbox");
    var isChecked = checkbox.checked;
    for (var i = 0; i < artists.length; i++) {
        artists[i].checked = isChecked;
    }

    refreshArtistList();
}
</script>
